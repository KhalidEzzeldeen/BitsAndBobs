
input.A = A;
input.b = b;
input.SolO = 1; %Column solutions
input.FitType = 1;
input.ScoreType = [1, 1, 0];
input.k = 1.5;

output = InitilizeGA(input);

% %Set output values.
% output.A = A;
% output.b = b;
% output.SolO = 1; %Column solutions
% output.FitType = 1;
% output.ScoreType = [1, 1, 0];
% output.k = 1.5;
% output.SSSize=SSSize;
% output.XValues = XValues;
% output.NumX = NumXValues;
% output.BestC = BestC;
% output.BestFit = BestFit;
% output.Chromos = Chromos;
% output.count = 0;


%------------------------------
%General input parameters
% input.A = A;
% input.b = b;
% input.SolO = 1; %Column solutions
% input.FitType = 1; %default fitness function type
% input.ScoreType = [1, 1, 0]; 
% input.SSSize=SSSize; %solution space size based on NumX
% input.XValues = XValues; %domains of each x_i, each column corresponds to
% a different x
% input.NumX = NumXValues; %number of values for each X parameter
% input.PopType = 'fixed'; %fixed or variable sized population
% input.BestC = BestC; %current best chromosome(s) found thus far
% input.BestFit = BestFit; %current best fitness value for BestC.
% input.Chromos = Chromos; %current solution Chromosomes 
% input.Fitness %current fitness scores for chromosomes
% input.Score
% input.Rank %current ranks for chromosomes
%-----------------------------
%UpdateGA specific parameters
input.Parent = [2,4,5,8;.25,.25,.25,.25];
% input.StopCriteria = [inf, iteWOImprov, FracSingSoln];
input.Tenure = .15;
input.count = 0;

while input.count < input.PopSize
    input = GABody(input);
end